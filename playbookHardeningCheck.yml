---
- name: Top 10 Hardening Checks
  hosts: all
  gather_facts: false
  tasks:

    - name: Check 1 - Ensure password expiration is set
      shell: |
        grep -E '^PASS_MAX_DAYS' /etc/login.defs || echo "PASS_MAX_DAYS 99999"
      register: pass_max_days
      changed_when: false

    - name: Check 2 - Ensure SSH root login is disabled
      shell: |
        grep -E '^PermitRootLogin no' /etc/ssh/sshd_config || echo "PermitRootLogin no"
      register: ssh_root_login
      changed_when: false

    - name: Check 3 - Ensure firewall is enabled
      shell: |
        systemctl is-active ufw || echo "ufw not active"
      register: firewall_status
      changed_when: false

    - name: Check 4 - Ensure unnecessary services are disabled
      command: >
        sh -c "systemctl list-unit-files | grep enabled | grep -E 'telnet|ftp|rsh|rlogin|rexec' || echo 'No unnecessary services found'"
      register: unnecessary_services
      changed_when: false
      ignore_errors: yes

    - name: Check 5 - Ensure automatic updates are enabled
      shell: |
        grep -E '^APT::Periodic::Update-Package-Lists "1";' /etc/apt/apt.conf.d/20auto-upgrades || echo "APT::Periodic::Update-Package-Lists \"1\";"
      register: auto_updates
      changed_when: false

    - name: Check 6 - Ensure auditd is installed and running
      shell: |
        systemctl is-active auditd || echo "auditd not active"
      register: auditd_status
      changed_when: false

    - name: Check 7 - Ensure SELinux is enabled
      shell: |
        sestatus | grep "SELinux status" | grep "enabled" || echo "SELinux not enabled"
      register: selinux_status
      changed_when: false

    - name: Check 8 - Ensure permissions on sensitive files are correct
      shell: |
        stat -c "%A %n" /etc/passwd /etc/shadow /etc/group | grep -E '^-rw-r--r--|^-rw-------'
      register: file_permissions
      changed_when: false

    - name: Check 9 - Ensure cron is restricted to authorized users
      shell: |
        ls -l /etc/cron.allow /etc/cron.deny || echo "cron not restricted"
      register: cron_restriction
      changed_when: false

    - name: Check 10 - Ensure NTP is configured
      shell: |
        ntpq -p || echo "NTP not configured"
      register: ntp_status
      changed_when: false

    - name: Create HTML Report
      local_action: |
        copy:
          content: |
            <html>
              <head><title>Hardening Report</title></head>
              <body>
                <h1>Hardening Report</h1>
                <table border="1">
                  <tr><th>Check</th><th>Result</th><th>Priority</th><th>Status</th><th>Comment</th></tr>
                  <tr><td>Password Expiration</td><td>{{ pass_max_days.stdout }}</td><td>High</td><td>{% if pass_max_days.stdout != 'PASS_MAX_DAYS 99999' %}Pass{% else %}Fail{% endif %}</td><td>Ensure password expiration is set to 90 days.</td></tr>
                  <tr><td>SSH Root Login</td><td>{{ ssh_root_login.stdout }}</td><td>High</td><td>{% if ssh_root_login.stdout == 'PermitRootLogin no' %}Pass{% else %}Fail{% endif %}</td><td>Ensure SSH root login is disabled.</td></tr>
                  <tr><td>Firewall Status</td><td>{{ firewall_status.stdout }}</td><td>High</td><td>{% if firewall_status.stdout != 'ufw not active' %}Pass{% else %}Fail{% endif %}</td><td>Ensure firewall is enabled.</td></tr>
                  <tr><td>Unnecessary Services</td><td>{{ unnecessary_services.stdout }}</td><td>Medium</td><td>{% if unnecessary_services.stdout == 'No unnecessary services found' %}Pass{% else %}Fail{% endif %}</td><td>Ensure unnecessary services are disabled.</td></tr>
                  <tr><td>Automatic Updates</td><td>{{ auto_updates.stdout }}</td><td>High</td><td>{% if auto_updates.stdout == 'APT::Periodic::Update-Package-Lists "1";' %}Pass{% else %}Fail{% endif %}</td><td>Ensure automatic updates are enabled.</td></tr>
                  <tr><td>Auditd Status</td><td>{{ auditd_status.stdout }}</td><td>High</td><td>{% if auditd_status.stdout != 'auditd not active' %}Pass{% else %}Fail{% endif %}</td><td>Ensure auditd is installed and running.</td></tr>
                  <tr><td>SELinux Status</td><td>{{ selinux_status.stdout }}</td><td>High</td><td>{% if selinux_status.stdout != 'SELinux not enabled' %}Pass{% else %}Fail{% endif %}</td><td>Ensure SELinux is enabled.</td></tr>
                  <tr><td>File Permissions</td><td>{{ file_permissions.stdout }}</td><td>High</td><td>{% if file_permissions.stdout != '-rw-r--r-- /etc/passwd -rw-r--r-- /etc/group' %}Pass{% else %}Fail{% endif %}</td><td>Ensure permissions on sensitive files are correct.</td></tr>
                  <tr><td>Cron Restriction</td><td>{{ cron_restriction.stdout }}</td><td>Medium</td><td>{% if cron_restriction.stdout != 'cron not restricted' %}Pass{% else %}Fail{% endif %}</td><td>Ensure cron is restricted to authorized users.</td></tr>
                  <tr><td>NTP Configuration</td><td>{{ ntp_status.stdout }}</td><td>High</td><td>{% if ntp_status.stdout != 'NTP not configured' %}Pass{% else %}Fail{% endif %}</td><td>Ensure NTP is configured.</td></tr>
                </table>
              </body>
            </html>
          dest: "/app/{{ inventory_hostname }}_{{ ansible_date_time.iso8601 }}_report.html"
